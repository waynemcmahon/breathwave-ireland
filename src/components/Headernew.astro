---
import navData from "@data/navData.json";
import { Icon } from "astro-icon/components";
import DarkModeToggle from "@components/DarkModeToggle.astro";
---

<!-- ============================================ --><!--                 Navigation                   --><!-- ============================================ -->
<header id="cs-navigation">
  <div class="cs-container">
    <!--Nav Logo-->
    <a href="" class="cs-logo" aria-label="back to home">
      <img
        src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Icons/leaf-icon.png"
        width="60"
        height="60"
        aria-hidden="true"
        decoding="async"
      />
    </a>
    <!--Navigation List-->
    <nav class="cs-nav" role="navigation">
      <!--Mobile Nav Toggle-->
      <button class="cs-toggle" aria-label="mobile menu toggle">
        <div class="cs-box" aria-hidden="true">
          <span class="cs-line cs-line1" aria-hidden="true"></span>
          <span class="cs-line cs-line2" aria-hidden="true"></span>
          <span class="cs-line cs-line3" aria-hidden="true"></span>
        </div>
      </button>
      <!-- We need a wrapper div so we can set a fixed height on the cs-ul in case the nav list gets too long from too many dropdowns being opened and needs to have an overflow scroll. This wrapper acts as the background so it can go the full height of the screen and not cut off any overflowing nav items while the cs-ul stops short of the bottom of the screen, which keeps all nav items in view no matter how mnay there are-->
      <div class="cs-ul-wrapper">
        <ul id="cs-expanded" class="cs-ul" aria-expanded="false">
          <li class="cs-li">
            <a href="" class="cs-li-link cs-active"> Home </a>
          </li>
          <li class="cs-li">
            <a href="" class="cs-li-link"> About </a>
          </li>
          <li class="cs-li">
            <a href="" class="cs-li-link"> Menu </a>
          </li>
          <li class="cs-li">
            <a href="" class="cs-li-link"> Catering </a>
          </li>
          <li class="cs-li">
            <a href="" class="cs-li-link"> Contact </a>
          </li>
        </ul>
      </div>
    </nav>
    <a href="" class="cs-button-solid cs-nav-button">Reservation</a>
  </div>
</header>

<script>
  // add classes for mobile navigation toggling
  var CSbody = document.querySelector("body");
  const CSnavbarMenu = document.querySelector("#cs-navigation");
  const CShamburgerMenu = document.querySelector("#cs-navigation .cs-toggle");

  CShamburgerMenu.addEventListener("click", function () {
    CShamburgerMenu.classList.toggle("cs-active");
    CSnavbarMenu.classList.toggle("cs-active");
    CSbody.classList.toggle("cs-open");
    // run the function to check the aria-expanded value
    ariaExpanded();
  });

  // checks the value of aria expanded on the cs-ul and changes it accordingly whether it is expanded or not
  function ariaExpanded() {
    const csUL = document.querySelector("#cs-expanded");
    const csExpanded = csUL.getAttribute("aria-expanded");

    if (csExpanded === "false") {
      csUL.setAttribute("aria-expanded", "true");
    } else {
      csUL.setAttribute("aria-expanded", "false");
    }
  }

  // This script adds a class to the body after scrolling 100px
  // and we used these body.scroll styles to create some on scroll
  // animations with the navbar

  document.addEventListener("scroll", (e) => {
    const scroll = document.documentElement.scrollTop;
    if (scroll >= 100) {
      document.querySelector("body").classList.add("scroll");
    } else {
      document.querySelector("body").classList.remove("scroll");
    }
  });

  // mobile nav toggle code
  const dropDowns = Array.from(
    document.querySelectorAll("#cs-navigation .cs-dropdown"),
  );
  for (const item of dropDowns) {
    const onClick = () => {
      item.classList.toggle("cs-active");
    };
    item.addEventListener("click", onClick);
  }
</script>
<style lang="less">
  /*-- -------------------------- -->
<---     Mobile Navigation      -->
<--- -------------------------- -*/

  body,
  html {
    /* reset margin and padding so there's no gap between the nav and the screen edges */
    margin: 0;
    padding: 0;
  }

  /* Mobile - 1023px */
  @media only screen and (max-width: 63.9375rem) {
    body {
      &.cs-open {
        overflow: hidden;
      }

      &.scroll {
        #cs-navigation {
          &:before {
            height: 100%;
          }
        }
      }
    }

    #cs-navigation {
      width: 100%;
      padding: (12/16rem) (16/16rem);
      /* prevents padding and border from affecting height and width */
      box-sizing: border-box;
      background: rgba(26, 26, 26, 0.08);
      -webkit-backdrop-filter: blur(27px);
      backdrop-filter: blur(27px);
      position: fixed;
      z-index: 10000;
      transition: background-color 0.3s;

      &:before {
        /* black overlay on scroll */
        content: "";
        width: 100%;
        height: 0%;
        background: #1a1a1a;
        opacity: 1;
        position: absolute;
        display: block;
        top: 0;
        left: 0;
        transition: height 0.3s;
      }

      &:after {
        /* side overlay when menu opens */
        content: "";
        width: 0%;
        height: 100vh;
        background: rgba(0, 0, 0, 0.6);
        -webkit-backdrop-filter: blur(10px);
        backdrop-filter: blur(10px);
        position: absolute;
        display: block;
        top: 0%;
        right: 0;
        z-index: -1100;
        opacity: 0;
        transition:
          width 0.5s,
          opacity 0.5s;
      }

      &.cs-active {
        background-color: #1a1a1a;
        &:before {
          height: 100%;
          opacity: 1;
        }

        &:after {
          width: 100%;
          opacity: 1;
        }

        .cs-ul-wrapper {
          opacity: 1;
          transform: scaleX(1);
          transition-delay: 0.2s;
        }

        .cs-li {
          transform: translateX(0);
          opacity: 1;
        }
      }

      .cs-container {
        width: 100%;
        display: flex;
        justify-content: flex-end;
        align-items: center;
      }

      .cs-logo {
        width: auto;
        /* 56px - 80px */
        height: clamp(3.5rem, 5vw, 5rem);
        margin: 0 auto 0 0;
        padding: 0;
        /* prevents padding and border from affecting height and width */
        box-sizing: border-box;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 10;

        img {
          width: 100%;
          height: 100%;
          /* ensures the image never overflows the container. It stays contained within it's width and height and expands to fill it then stops once it reaches an edge */
          object-fit: contain;
          /* places the image to the left edge of the parent */
          object-position: left;
        }
      }

      .cs-toggle {
        width: (56/16rem);
        height: (56/16rem);
        margin: 0 0 0 auto;
        background-color: var(--primary);
        border: none;
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
        z-index: 10;
        transition: transform 0.6s;
        &.cs-active {
          transform: rotate(180deg);
        }
      }

      .cs-active {
        .cs-line1 {
          top: 50%;
          transform: translate(-50%, -50%) rotate(225deg);
        }

        .cs-line2 {
          top: 50%;
          transform-origin: center;
          transform: translate(-50%, -50%) translateY(0) rotate(-225deg);
        }

        .cs-line3 {
          bottom: 100%;
          opacity: 0;
        }
      }

      .cs-box {
        /* 24px - 28px */
        width: clamp(1.5rem, 2vw, 1.75rem);
        height: (16/16rem);
        position: relative;
      }

      .cs-line {
        width: 100%;
        height: 2px;
        border-radius: 2px;
        background-color: #fafbfc;
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
      }

      .cs-line1 {
        top: 0;
        transform-origin: center;
        transition:
          transform 0.5s,
          top 0.3s,
          left 0.3s;
        animation-duration: 0.7s;
        animation-timing-function: ease;
        animation-fill-mode: forwards;
        animation-direction: normal;
      }

      .cs-line2 {
        top: 50%;
        transform: translateX(-50%) translateY(-50%);
        transition:
          top 0.3s,
          left 0.3s,
          transform 0.5s;
        animation-duration: 0.7s;
        animation-timing-function: ease;
        animation-fill-mode: forwards;
        animation-direction: normal;
      }

      .cs-line3 {
        bottom: 0;
        transition:
          bottom 0.3s,
          opacity 0.3s;
      }

      .cs-ul-wrapper {
        min-width: 60vw;
        height: 100vh;
        opacity: 0;
        background-color: #fff;
        box-shadow: inset rgba(0, 0, 0, 0.2) 0px 8px 24px;
        overflow: hidden;
        position: absolute;
        top: 100%;
        left: auto;
        right: 0;
        z-index: -1;
        transform: scaleX(0);
        transform-origin: top right;
        transition:
          transform 0.4s,
          opacity 0.3s;
      }

      .cs-ul {
        margin: 0;
        /* 28px - 40px */
        padding: (48/16rem) clamp(1.75rem, 3vw, 2.5rem) (32/16rem) (70/16rem);
        width: auto;
        min-width: 40%;
        height: 65vh;
        overflow: scroll;
        display: flex;
        justify-content: flex-start;
        flex-direction: column;
        align-items: flex-end;
        gap: (20/16rem);
      }

      .cs-li {
        text-align: right;
        list-style: none;
        width: 100%;
        margin-right: 0;
        /* transition from these values */
        transform: translateX(-2.5rem);
        opacity: 0;
        transition:
          transform 0.6s,
          opacity 0.9s;

        &:nth-of-type(1) {
          transition-delay: 0.05s;
        }
        &:nth-of-type(2) {
          transition-delay: 0.1s;
        }
        &:nth-of-type(3) {
          transition-delay: 0.15s;
        }
        &:nth-of-type(4) {
          transition-delay: 0.2s;
        }
        &:nth-of-type(5) {
          transition-delay: 0.25s;
        }
        &:nth-of-type(6) {
          transition-delay: 0.3s;
        }
        &:nth-of-type(7) {
          transition-delay: 0.35s;
        }
        &:nth-of-type(8) {
          transition-delay: 0.4s;
        }
        &:nth-of-type(9) {
          transition-delay: 0.45s;
        }
      }

      .cs-li-link {
        /* 16px - 24px */
        font-size: clamp(1rem, 2.5vw, 1.5rem);
        line-height: 1.2em;
        text-decoration: none;
        text-transform: uppercase;
        font-weight: bold;
        margin: 0;
        color: var(--headerColor);
        display: inline-block;
        position: relative;

        &:before {
          /* active state underline */
          content: "";
          width: 100%;
          height: 1px;
          background: currentColor;
          opacity: 1;
          position: absolute;
          display: none;
          bottom: (-2/16rem);
          left: 0;
        }

        &.cs-active {
          &:before {
            display: block;
          }
        }
      }

      .cs-button-solid {
        display: none;
      }
    }
  }

  /*-- -------------------------- -->
<---     Desktop Navigation     -->
<--- -------------------------- -*/

  /* Small Desktop - 1024px */
  @media only screen and (min-width: 64rem) {
    body.scroll {
      /* when the scroll class is on the body, run these styles */
      #cs-navigation {
        background-color: white;
        color: black;
        &:before {
          height: 100%;
        }
      }
    }

    #cs-navigation {
      width: 100%;
      padding: 0 (16/16rem);
      /* prevents padding and border from affecting height and width */
      box-sizing: border-box;
      background: rgba(26, 26, 26, 0.08);
      -webkit-backdrop-filter: blur(27px);
      backdrop-filter: blur(27px);
      position: fixed;
      z-index: 10000;

      &:before {
        /* on scroll background */
        content: "";
        width: 100%;
        height: 0%;
        background: #1a1a1a;
        opacity: 1;
        position: absolute;
        display: block;
        top: 0;
        left: 0;
        transition: height 0.3s;
      }

      .cs-container {
        width: 100%;
        /* same height as the cs-ul-wrapper */
        height: (101/16rem);
        max-width: (1280/16rem);
        margin: auto;
        display: flex;
        justify-content: flex-end;
        align-items: center;
        gap: (24/16rem);
        position: relative;
      }

      .cs-toggle {
        display: none;
      }

      .cs-logo {
        width: auto;
        height: (60/16rem);
        /* margin-right auto pushes everything away from it to the right */
        margin: 0 auto 0 0;
        padding: 0;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 100;

        img {
          width: 100%;
          height: 100%;
          /* ensures the image never overflows the container. It stays contained within it's width and height and expands to fill it then stops once it reaches an edge */
          object-fit: contain;
        }
      }

      .cs-ul-wrapper {
        /* absolutely positioned to be dead center */
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
      }

      .cs-ul {
        width: 100%;
        margin: 0;
        padding: 0;
        display: flex;
        justify-content: flex-start;
        align-items: center;
        gap: (24/16rem);
      }

      .cs-li {
        list-style: none;
        padding: (40/16rem) 0;
        /* prevent flexbox from squishing it */
        flex: none;
      }

      .cs-li-link {
        /* 14px - 16px */
        font-size: clamp(0.875rem, 0.6vw, 1rem);
        line-height: 1.5em;
        font-weight: 700;
        text-decoration: none;
        text-transform: uppercase;
        margin: 0;
        padding: 0 (16/16rem);
        color: var(--bodyTextColorWhite);
        display: block;
        position: relative;
        z-index: 1;
        transition: color 0.3s;

        &:before {
          /* on scroll background */
          content: "";
          width: 100%;
          height: (40/16rem);
          background: var(--primary);
          opacity: 0;
          position: absolute;
          display: block;
          top: 50%;
          left: 50%;
          z-index: -1;
          transform: translate(-50%, -50%) scale(1.2);
          transition:
            opacity 0.3s,
            transform 0.3s;
        }

        &:hover {
          &:before {
            opacity: 1;
            transform: translate(-50%, -50%) scale(1);
          }
        }

        &.cs-active {
          &:before {
            opacity: 1;
            transform: translate(-50%, -50%) scale(1);
          }
        }
      }

      .cs-button-solid {
        font-size: (16/16rem);
        /* 46px - 56px */
        line-height: clamp(2.875em, 5.5vw, 3.5em);
        text-decoration: none;
        font-weight: 700;
        text-align: center;
        margin: 0;
        color: #fff;
        min-width: (150/16rem);
        padding: 0 (32/16rem);
        background-color: transparent;
        border: 1px solid var(--primary);
        display: inline-block;
        position: relative;
        z-index: 1;
        /* prevents padding from adding to the width */
        box-sizing: border-box;

        &:before {
          content: "";
          position: absolute;
          height: 100%;
          width: 0%;
          background: var(--primary);
          opacity: 1;
          top: 0;
          left: 0;
          z-index: -1;
          transition: width 0.3s;
        }

        &:hover {
          &:before {
            width: 100%;
          }
        }
      }
    }
  }
</style>
