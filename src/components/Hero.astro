---
import clientData from "@data/client.json";
import { Picture, Image } from "astro:assets";
import Button from "@components/ui/button.astro";

import { getImage } from "astro:assets";

import mobileUrl from "../assets/images/hero/hero-mobile-x1.jpg";
import mobileUrlx2 from "../assets/images/hero/hero-mobile-x2.jpg";
import desktopUrl from "../assets/images/hero/hero-desktop-x1.jpg";
import desktopUrlx2 from "../assets/images/hero/hero-desktop-x2.jpg";
import thumbnail from "../assets/images/hero/thumbnail.jpg";

const mobileImage = await getImage({
  src: mobileUrl,
  format: "avif",
  width: 600,
  height: 337,
  loading: "eager",
});

const mobileImagex2 = await getImage({
  src: mobileUrlx2,
  format: "avif",
  width: 600,
  height: 337,
  loading: "eager",
});

const desktopImage = await getImage({
  src: desktopUrl,
  format: "avif",
  width: 1300,
  height: 1080,
  loading: "eager",
});

const desktopImagex2 = await getImage({
  src: desktopUrlx2,
  format: "avif",
  width: 1920,
  height: 1080,
  loading: "eager",
});
---

<section id="hero-997">
  <div class="cs-container flex flex-col">
    <div class="cs-content">
      <div class="cs-topper">Breathwork - Breathwave</div>
      <h1 class="cs-title">Discover the Power of Your Breath</h1>
      <div class="h-2 w-28 bg-white mb-8"></div>
      <p class="cs-text subtext">
        An empowered life starts with an empowered nervous system. Discover how
        your breath is the gateway to your nervous system and how your nervous
        system is key to enjoying a balanced life.
      </p>
      <Button href={clientData.membersUrl} text="Start Your Journey" />
    </div>
    <div class="absolute top-0 right-4 sm:-top-4 hidden sm:block">
      <div
        class="flex flex-row gap-4 items-center cursor-pointer hover:scale-105 transition-all duration-300 watch-intro-button"
      >
        <span class="text-white hidden sm:block">Watch Introduction</span>
        <div class="relative flex items-center justify-center w-auto">
          <div
            class="bg-secondary rounded-full w-6 h-6 flex items-center justify-center -mr-4 z-10 sm:w-7 sm:h-7"
          >
            <div
              class="w-0 h-0 border-t-[3px] border-t-transparent border-l-[6px] border-l-black border-b-[3px] border-b-transparent ml-0.5"
            >
            </div>
          </div>
          <div class="relative">
            <Image
              src={thumbnail}
              alt="thumbnail"
              width={70}
              height={70}
              class="rounded-full border-2 w-12 h-12 sm:w-16 sm:h-16"
            />
          </div>
          <!-- <div
          class="w-[70px] h-[70px] rounded-full border-2 animate-ping absolute left-3"
        > -->
        </div>
      </div>
    </div>
  </div>
  <div class="cs-background">
    <picture>
      <source
        srcset={mobileImage.src}
        media="(max-width: 600px)"
        type="image/avif"
      />
      <source
        srcset={mobileImagex2.src}
        media="(max-width: 600px) and (min-resolution: 192dpi)"
        type="image/avif"
      />
      <source
        srcset={desktopImage.src}
        media="(min-width: 601px) and (max-width: 1300px)"
        type="image/avif"
      />
      <source
        srcset={desktopImagex2.src}
        media="(min-width: 1300px) and (min-resolution: 192dpi)"
        type="image/avif"
      />
      <!--  <source
        srcset={desktopImagex3.src}
        media="(min-width: 1300px) and (min-resolution: 192dpi)"
        type="image/avif"
      /> -->
      <Image
        src={mobileImage.src}
        alt="Descriptive alt text"
        width={1080}
        height={1920}
        loading="eager"
      />
    </picture>
  </div>

  <style lang="less">
    /* Mobile - 360px */
    @media only screen and (min-width: 0rem) {
      #hero-997 {
        /* 200px - 300px - leaving extra space for the navigation */
        padding: clamp(12.5rem, 25.95vw, 16.75rem) (16/16rem) 0;
        background-position: top;
        background-size: cover;
        /* 100px - 250px */
        padding-bottom: clamp(6.25rem, 45.95vw, 15.625rem);
        position: relative;
        z-index: 1;
        /* prevents overflow from the lines extending past the screen width */
        overflow: hidden;

        .cs-container {
          width: 100%;
          max-width: (1280/16rem);
          margin: auto;
          position: relative;
          display: flex;
          flex-direction: column;
          align-items: flex-start;
          /* 100px - 200px */
          gap: clamp(6.25rem, 25vw, 12.5rem);
        }

        .cs-content {
          width: 100%;
          max-width: (955/16rem);
          display: flex;
          align-items: flex-start;
          justify-content: flex-start;
          flex-direction: column;
          align-items: flex-start;
          box-sizing: border-box;
        }

        .cs-topper {
          /* 13px - 16px */
          font-size: clamp(0.8125rem, 1.6vw, 1rem);
          line-height: 1.2em;
          white-space: nowrap;
          text-transform: uppercase;
          text-align: left;
          font-weight: 700;
          width: 100%;
          color: var(--bodyTextColorWhite);
          margin-bottom: (28/16rem);
          display: flex;
          align-items: center;
          justify-content: flex-start;
          gap: (20/16rem);
          position: relative;
        }

        .cs-tag-left,
        .cs-tag-right {
          overflow: hidden;
          width: 100px;
          height: 100%;
          display: flex;
          justify-content: center;
          align-items: center;
        }

        .cs-tag-left {
          content: url("/assets/svgs/fancy-line-l.svg");
          height: 100%;
          opacity: 1;
          position: relative;
        }

        .cs-tag-right {
          content: url("/assets/svgs/fancy-line-r.svg");
          opacity: 1;
          height: 100%;
          filter: brightness(0) invert(1);
        }

        .cs-title {
          /* 39px - 80px */
          font-size: clamp(2.4375rem, 6.4vw, 4rem);
          font-weight: 900;
          line-height: 1.2em;
          text-align: left;
          width: 100%;
          max-width: 14ch;
          margin: 0 0 (32/16rem) 0;
          color: var(--bodyTextColorWhite);
          position: relative;
        }

        .cs-color {
          color: var(--primary);
        }

        .cs-text {
          /* 16px - 20px */
          font-size: clamp(1rem, 1.95vw, 1rem);
          text-wrap: balance;
          line-height: 1.5em;
          text-align: left;
          width: 100%;
          max-width: (600/16rem);
          margin: 0 0 (32/16rem) 0;
          color: var(--bodyTextColorWhite);

          &.subtext {
            display: none;
          }

          &.opening-hours {
            font-size: (16/16rem);
          }

          .days,
          .hours {
            display: block;
          }
        }

        .cs-button-box {
          display: flex;
          flex-wrap: wrap;
          justify-content: flex-start;
          align-items: center;
          gap: (20/16rem);
        }

        .cs-button-solid {
          text-align: center;
          font-size: (16/16rem);
          /* 46px - 56px */
          line-height: clamp(2.875rem, 5.5vw, 3.5rem);
          width: (180/16rem);
          text-decoration: none;
          font-weight: 700;
          margin: 0;
          color: #fff;
          padding: 0;
          background-color: var(--primary);
          display: inline-block;
          position: relative;
          z-index: 1;
          transition: color 0.3s;

          &:before {
            content: "";
            position: absolute;
            display: block;
            height: 100%;
            width: 0%;
            background: #fff;
            opacity: 1;
            top: 0;
            left: 0;
            z-index: -1;
            transition: width 0.3s;
          }

          &:hover {
            color: #1a1a1a;
            &:before {
              width: 100%;
            }
          }
        }

        .cs-button-transparent {
          font-size: (16/16rem);
          /* 46px - 56px */
          line-height: clamp(2.875rem, 5.5vw, 3.5rem);
          width: (180/16rem);
          /* 46px - 56px */
          height: clamp(2.875rem, 5.5vw, 3.5rem);
          text-decoration: none;
          font-weight: 700;
          margin: 0;
          color: #fff;
          padding: 0;
          background-color: transparent;
          border: 1px solid var(--bodyTextColorWhite);
          box-sizing: border-box;
          display: inline-flex;
          justify-content: center;
          align-items: center;
          position: relative;
          z-index: 1;
          transition: color / 3s;

          &:before {
            content: "";
            position: absolute;
            display: block;
            background: #fff;
            opacity: 1;
            /* so it sits on top of the border */
            top: -1px;
            left: -1px;
            right: -1px;
            bottom: -1px;
            z-index: -1;
            transform-origin: left;
            /* this is what creates the grow affect on hover */
            transform: scaleX(0);
            transition: transform 0.3s;
          }

          &:hover {
            color: #1a1a1a;
            &:before {
              transform: scaleX(1);
            }
          }
        }

        .cs-background {
          /* Background Image */
          width: 100%;
          height: 100%;
          display: block;
          position: absolute;
          top: 0;
          left: 0;
          z-index: -2;

          &:before {
            /* Black Color Overlay */
            content: "";
            width: 100%;
            height: 100%;
            background: linear-gradient(
              41deg,
              rgba(0, 0, 0, 0.8) 10%,
              rgba(0, 0, 0, 0.1) 70%
            );
            opacity: 1;
            position: absolute;
            display: block;
            top: 0;
            left: 0;
            z-index: 1;
            /* prevents the cursor from interacting with it */
            pointer-events: none;
          }

          img {
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            width: 100%;
            /* Makes image act like a background-image */
            object-fit: cover;
            object-position: 0 0;
          }
        }
      }
    }

    @media only screen and (min-width: 601px) {
      #hero-997 {
        padding-bottom: clamp(6.25rem, 45.95vw, 18.625rem);
      }
      body #hero-997 .cs-tag-right {
        filter: none;
      }

      body #hero-997 .cs-text.subtext {
        display: block;
      }

      body #hero-997 .cs-background {
        img {
          object-position: -10rem;
        }
      }
    }

    /* Large Desktop Parallax Effect - 1300px */
    @media only screen and (min-width: 81.25rem) {
      #hero-997 {
        // Start of Selection
        background: url("/assets/images/hero-desktop-x2.jpg");
        //background-size: cover;
        //background-position: 0 -80px;
        background-repeat: no-repeat;
        background-size: cover;
        /* creates parallax effect on background image */
        background-attachment: fixed;
        /* remove img tag so we can make parallax work */
        z-index: 1000;

        .cs-background {
          img {
            display: none;
          }
        }
      }
    }
  </style>
</section>
