---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import BaseLayout from "src/layouts/BaseLayout.astro";
import { formatDate } from "@libs/utils.js";
import Landing from "@components/Landing.astro";
import FeaturedPost from "@components/FeaturedPost.astro";
import "@styles/blog.less";
import Button from "@components/ui/button.astro";

// Optimize our landing image and pass it as props to the BaseLayout (for preloading) and Landing (for rendering)
import { getOptimizedImage } from "@libs/utils";
import landingImage from "@assets/images/landing.jpg"; // <-- THE PATH TO THE ASSET YOU WANT TO PRELOAD - The asset must live in src
const optimizedImage = await getOptimizedImage(landingImage);

export async function getStaticPaths() {
  const posts = await getCollection("events");
  return posts.map((entry) => ({
    params: { post: entry.slug },
    props: { post: entry },
  }));
}

const { post } = Astro.props;
const {
  title,
  date,
  description,
  image,
  imageAlt,
  author,
  location,
  price,
  paymentLink,
  soldOut,
} = post.data;
const socialShareImageUrl = await getOptimizedImage(image);
const { Content } = await post.render();

console.log(soldOut);
---

<BaseLayout
  title={title}
  description={description}
  socialShareImageUrl={socialShareImageUrl}
  preloadedImage={optimizedImage}
>
  <Landing title="Events" image={landingImage} />
  <div class="blog-container main-content-wrapper">
    <div class="main-content">
      <article class="blog-article">
        <picture class="blog-mainImage">
          <Image
            src={image}
            alt={imageAlt}
            width="795"
            height="400"
            decoding="async"
          />
        </picture>

        <div class="article-group">
          <h1 class="blog-h1">{title}</h1>
          <div class="blog-authorGroup">
            <!-- Location -->
            {location && <p class="blog-date">{location}</p>}
            <span aria-hidden="true" class="blog-dot"></span>
            <!-- Price -->
            {price && <p class="blog-date">â‚¬{price}</p>}
            <span aria-hidden="true" class="blog-dot"></span>
            <!--Blog Date-->
            {date && <span class="blog-date">{formatDate(date)}</span>}
          </div>
        </div>
        <section id="blog-content">
          {
            paymentLink && (
              <div class="flex justify-center items-center pb-8">
                {new Date(date) < new Date() ? (
                  <div class="font-bold text-primary text-lg self-center">
                    This event has already passed.
                  </div>
                ) : soldOut ? (
                  <div class="font-bold text-primary text-lg self-center">
                    Sold Out
                  </div>
                ) : (
                  <Button href={paymentLink} text="Book Now" />
                )}
              </div>
            )
          }
          <Content />
        </section>
      </article>
    </div>
    <FeaturedPost />
  </div>
  <style lang="less">
    #blog-content img {
      max-width: 26rem;
      margin: 0 auto;
    }
  </style>
</BaseLayout>
