---
import BaseLayout from "src/layouts/BaseLayout.astro";
import Landing from "@components/Landing.astro";
import Button from "@components/ui/button.astro";
import { getOptimizedImage } from "@libs/utils";
import landingImage from "@assets/images/landing.jpg";
import Map from "@components/Map.astro";
const optimizedImage = await getOptimizedImage(landingImage);
---

<BaseLayout
  title="Contact Breathwave Ireland"
  description="Get in touch with Breathwave Ireland. Whether you have questions about our breathwork sessions, want to book a consultation, or need information about our services, we're here to help."
  preloadedImage={optimizedImage}
>
  <Landing title="Contact" image={landingImage} />
  <section id="contact-322">
    <div class="cs-container">
      <div class="cs-content">
        <span class="cs-topper">Contact Us</span>
        <h2 class="cs-title">For any questions or bookings</h2>
        <form
          class="cs-form"
          id="cs-form-322"
          method="POST"
          data-netlify="true"
          name="contact"
        >
          <input type="hidden" name="form-name" value="contact" />
          <input type="checkbox" name="botcheck" style="display: none;" />

          <label class="cs-label">
            Name
            <input
              class="cs-input"
              required
              type="text"
              id="name-322"
              name="name"
              placeholder="Name"
            />
          </label>
          <label class="cs-label cs-email">
            Email
            <input
              class="cs-input"
              required
              type="email"
              id="email-322"
              name="email"
              placeholder="Email"
            />
          </label>
          <label class="cs-label cs-phone">
            Phone
            <input
              class="cs-input"
              required
              type="text"
              id="phone-322"
              name="phone"
              placeholder="Phone"
            />
          </label>
          <label class="cs-label">
            Enquiry Type
            <select
              class="cs-input"
              required
              id="enquiry-type-322"
              name="enquiry-type"
            >
              <option value="general">General Enquiry</option>
              <option value="booking">Booking a Session</option>
              <option value="support">Support Request</option>
            </select>
          </label>
          <label class="cs-label">
            Message
            <textarea
              class="cs-input cs-textarea"
              required
              name="message"
              id="message-322"
              placeholder="Write message..."></textarea>
          </label>
          <Button type="submit" text="Send Message" />
          <div id="result"></div>
        </form>
      </div>
      <Map />
    </div>
  </section>
</BaseLayout>

<script is:inline>
  document.addEventListener("astro:page-load", () => {
    const form = document.getElementById("cs-form-322");
    const message = document.getElementById("result");

    form?.addEventListener("submit", function (event) {
      event.preventDefault();

      const formData = new FormData(form);

      fetch("/", {
        method: "POST",
        headers: { "Content-Type": "application/x-www-form-urlencoded" },
        body: new URLSearchParams(formData).toString(),
      })
        .then(() => {
          if (message) {
            message.classList.add("submitted");
            message.textContent = "Your message has been sent!";
          }
          form.reset();
        })
        .catch((error) => {
          if (message) {
            message.classList.add("error");
            message.textContent = `Submission failed: ${error}`;
          }
        });
    });
  });
</script>

<style lang="less">
  /* Mobile - 360px */
  @media only screen and (min-width: 0rem) {
    #contact-322 {
      padding: var(--sectionPadding);
      position: relative;
      z-index: 1;

      .cs-container {
        width: 100%;
        /* changes to 1280px at desktop */
        max-width: (550/16em);
        margin: auto;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        gap: (52/16rem);
      }

      .cs-content {
        text-align: left;
      }

      .cs-form {
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
        align-items: center;
        gap: (12/16rem);
      }

      .cs-label {
        /* 14px - 16px */
        font-size: clamp(0.875rem, 1.5vw, 1rem);
        width: 100%;
        color: var(--headerColor);
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-start;
        gap: (4/16rem);
      }

      .cs-input {
        font-size: (16/16rem);
        width: 100%;
        height: (56/16rem);
        padding: 0;
        padding-left: (24/16rem);
        border-radius: (8/16rem);
        color: var(--headerColor);
        background-color: #f7f7f7;
        border: none;
        /* prevents padding from adding to height and width */
        box-sizing: border-box;
        &::placeholder {
          color: #7d799c;
          opacity: 0.6;
        }
      }

      .cs-textarea {
        min-height: (120/16rem);
        padding-top: (24/16rem);
        margin-bottom: (12/16rem);
        font-family: inherit;
      }

      #result.submitted {
        border: 1px solid #919090;
        padding: 1rem;
        border-radius: 0.5rem;
        background-color: #ceffd6;
        color: #30a530;
      }

      #result.error {
        border: 1px solid #919090;
        padding: 1rem;
        border-radius: 0.5rem;
        background-color: #ffd6d6;
        color: #a53030;
      }

      .cs-button-solid {
        font-size: (16/16rem);
        /* 46px - 56px */
        line-height: clamp(2.875rem, 5.5vw, 3.5rem);
        text-decoration: none;
        font-weight: 700;
        text-align: center;
        margin: 0;
        color: #fff;
        min-width: (150/16rem);
        padding: 0 (24/16rem);
        background-color: var(--primary);
        border-radius: (4/16rem);
        display: inline-block;
        position: relative;
        z-index: 1;
        /* prevents padding from adding to the width */
        box-sizing: border-box;

        &:before {
          content: "";
          position: absolute;
          height: 100%;
          width: 0%;
          background: #000;
          opacity: 1;
          top: 0;
          left: 0;
          z-index: -1;
          border-radius: (4/16rem);
          transition: width 0.3s;
        }

        &:hover {
          &:before {
            width: 100%;
          }
        }
      }

      .cs-submit {
        text-transform: uppercase;
        width: (283/16rem);
        color: #fff;
        background-color: var(--secondary);
        border: none;
        transition: color 0.3s;
        &:hover {
          color: #fff;
          cursor: pointer;
        }
      }

      .cs-right {
        width: 100%;
        /* 16px - 24px */
        padding: clamp(1rem, 3.5vw, 1.5rem);
        border-radius: (24/16rem);
        background-color: var(--primary);
        display: flex;
        /* prevents padding from adding to height and width */
        box-sizing: border-box;
        flex-direction: column;
        align-items: flex-start;
        justify-content: center;
        /* 24px - 32px */
        gap: clamp(1.5rem, 4vw, 2rem);
      }

      .cs-map {
        width: 100%;
        /* 300px - 425px */
        height: clamp(18.75rem, 63.4vw, 26.5625rem);
        border-radius: (24/16rem);
        /* clips the corners of the img tag */
        overflow: hidden;
        position: relative;
        display: block;

        img {
          position: absolute;
          top: 0;
          left: 0;
          height: 100%;
          width: 100%;
          object-fit: cover;
        }
      }

      .cs-contact-group {
        padding: 0;
        margin: 0;
        display: flex;
        justify-content: center;
        align-items: flex-start;
        flex-direction: column;
        gap: (16/16rem);
      }

      .cs-item {
        list-style: none;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-start;
      }

      .cs-header {
        font-size: (20/16rem);
        line-height: 1.2em;
        font-weight: 700;
        margin-bottom: (12/16rem);
        color: var(--secondaryLight);
        display: flex;
        justify-content: flex-start;
        align-items: center;
        gap: (4/16rem);

        picture {
          display: flex;
        }
      }

      .cs-link,
      .cs-hours {
        /* 14px - 16px */
        font-size: clamp(0.875rem, 1.5vw, 1rem);
        line-height: 1.5em;
        text-decoration: none;
        color: var(--bodyTextColorWhite);
        transition: color 0.3s;
      }

      .cs-link {
        &:hover {
          color: var(--secondaryLight);
        }
      }
    }
  }

  /* Tablet - 650px */
  @media only screen and (min-width: 40.625rem) {
    #contact-322 {
      .cs-contact-group {
        width: 100%;
        flex-direction: row;
        justify-content: space-between;
      }
    }
  }

  /* Small Desktop - 1024px */
  @media only screen and (min-width: 64rem) {
    #contact-322 {
      .cs-container {
        max-width: (1280/16rem);
        flex-direction: row;
        justify-content: space-between;
        gap: (52/16rem);
      }

      .cs-content {
        max-width: (522/16rem);
      }

      .cs-title,
      .cs-topper {
        text-align: left;
        margin-left: 0;
      }

      .cs-title {
        max-width: (522/16rem);
      }

      .cs-email,
      .cs-phone {
        width: 48%;
      }

      .cs-button-solid {
        margin-left: 0;
      }

      .cs-right {
        width: 51.6%;
        max-width: (658/16rem);
        /* prevent flexbox from squishing it */
        flex: none;
      }
    }
  }
</style>
