---
import BaseLayout from "src/layouts/BaseLayout.astro";
import CTA from "@components/CTA.astro";
import Landing from "@components/Landing.astro";
import FAQ from "@components/FAQ.astro";

// Optimize our landing image and pass it as props to the BaseLayout (for preloading) and Landing (for rendering)
import { getOptimizedImage } from "@libs/utils";
import landingImage from "@assets/images/landing.jpg"; // <-- THE PATH TO THE ASSET YOU WANT TO PRELOAD - The asset must live in src
const optimizedImage = await getOptimizedImage(landingImage);
---

<BaseLayout
  title="Our Suppliers-"
  description="Meta description for the page"
  preloadedImage={optimizedImage}
>
  <!-- ============================================ -->
  <!--                    LANDING                   -->
  <!-- ============================================ -->

  <Landing title="About Us" image={optimizedImage} />

  <!-- ============================================ -->
  <!--                 Side By Side                 -->
  <!-- ============================================ -->

  <!-- ============================================ -->
  <!--                 Content Page                 -->
  <!-- ============================================ -->

  <!-- ============================================ 
    This Stitch is used for content heavy interior pages
    that have no design or layout.  Often times these are 
    content silos where you talk extensively about a topic
    to educate your visitors and rank on Google for the 
    content.  These are great for pages that have a TON
    of content.  Design isn't important here, it's all 
    about making the content accessible and easy to read.
================================================= -->

  <section id="content-page-714">
    <div class="cs-container">
      <div class="cs-content">
        <h1 class="cs-title">
          h1 - A Personalized Approach To Your <span class="cs-color"
            >Well-Being</span
          >
        </h1>
        <h2>Heading 2</h2>
        <h3>Heading 3</h3>
        <h4>Heading 4-6</h4>
        <p>
          Lorem ipsum dolor sit amet consectetur adipisicing elit. Veritatis
          laboriosam eum quae in temporibus cumque tempora expedita mollitia
          nostrum adipisci, ipsum commodi, cupiditate, sequi quos enim! Quaerat
          esse non sunt! Lorem ipsum dolor sit amet <a href="">link example</a>.
          Est, quis!
        </p>
        <p>
          Lorem ipsum dolor sit amet consectetur adipisicing elit. Veritatis
          laboriosam eum quae in temporibus cumque tempora expedita mollitia
          nostrum <strong>adipisci, ipsum commodi</strong>, cupiditate, sequi
          quos enim!
        </p>
        <h3>Heading 3</h3>
        <ol>
          <li>Lorem ipsum dolor sit amet consectetur adipisicing elit.</li>
          <li>Lorem ipsum dolor sit amet consectetur adipisicing elit.</li>
          <li>Lorem ipsum dolor sit amet consectetur adipisicing elit.</li>
        </ol>
        <h4>Heading 4-6</h4>
        <ul>
          <li>Lorem ipsum dolor sit amet consectetur adipisicing elit.</li>
          <li>Lorem ipsum dolor sit amet consectetur adipisicing elit.</li>
          <li>Lorem ipsum dolor sit amet consectetur adipisicing elit.</li>
        </ul>
      </div>
      <div class="cs-image-group">
        <picture class="cs-picture">
          <!--Mobile Image-->
          <source
            media="(max-width: 600px)"
            srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images%2FPeople%2Fperson7.jpg"
          />
          <!--Tablet and above Image-->
          <source
            media="(min-width: 601px)"
            srcset="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images%2FPeople%2Fperson7.jpg"
          />
          <img
            loading="lazy"
            decoding="async"
            src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images%2FPeople%2Fperson7.jpg"
            alt="person"
            width="570"
            height="680"
            aria-hidden="true"
          />
        </picture>

        <!--Flower Graphic-->
        <img
          class="cs-flower"
          loading="lazy"
          decoding="async"
          src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images%2FGraphics%2Fbig-abstract-flower.svg"
          alt="flower graphic"
          width="362"
          height="350"
          aria-hidden="true"
        />

        <!--Spidey Sense Graphic-->
        <img
          class="cs-sense"
          loading="lazy"
          decoding="async"
          src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images%2FGraphics%2Fspider-sense.svg"
          alt="spidey sense graphic"
          width="80"
          height="89"
          aria-hidden="true"
        />
      </div>
    </div>
    <!--Waves Graphic-->
    <picture class="cs-background">
      <img
        src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images%2FGraphics%2Flarge-waves.svg"
        alt="waves"
        decoding="async"
        aria-hidden="true"
        width="625"
        height="952"
      />
    </picture>
  </section>

  <CTA />
</BaseLayout>

<style lang="less">
  /*-- -------------------------- -->
<---        Content Page        -->
<--- -------------------------- -*/

  /* Mobile - 360px */
  @media only screen and (min-width: 0rem) {
    #content-page-714 {
      padding: var(--sectionPadding);
      background-color: #fff;
      /* clips the wave background from causing overflow issues when it goes off screen */
      overflow: hidden;
      position: relative;
      z-index: 1;

      .cs-container {
        width: 100%;
        max-width: (1280/16rem);
        margin: auto;
        display: flex;
        flex-direction: column;
        align-items: center;
        /* 48px - 64px */
        gap: clamp(3rem, 6vw, 4rem);
        position: relative;
      }

      .cs-content {
        /* set text align to left if content needs to be left aligned */
        text-align: left;
        width: 100%;
        max-width: (738/16rem);
        display: flex;
        flex-direction: column;
        /* centers content horizontally, set to flex-start to left align */
        align-items: flex-start;

        img {
          width: 100%;
          height: auto;
          margin: (16/16rem) 0;
          display: block;
        }
      }
      h2,
      h3,
      h4,
      h5,
      h6 {
        font-weight: 700;
        text-align: inherit;
        margin: 0 0 (16/16rem) 0;
        color: var(--headerColor);
      }

      h2 {
        font-size: (32/16rem);
        margin-top: (32/16rem);
      }

      h3 {
        font-size: (24/16rem);
        color: var(--primary);
      }

      h4,
      h5,
      h6 {
        font-size: (20/16rem);
      }

      .cs-button-solid {
        margin-bottom: (32/16rem);
      }

      .cs-color {
        color: var(--primary);
      }

      p {
        font-size: var(--bodyFontSize);
        line-height: 1.5em;
        text-align: inherit;
        width: 100%;
        margin: 0 0 (16/16rem) 0;
        color: var(--bodyTextColor);
        &:last-of-type {
          margin-bottom: (32/16rem);
        }

        a {
          font-size: inherit;
          line-height: inherit;
          text-decoration: underline;
          color: var(--primary);
        }
      }

      ol,
      ul {
        padding-left: (24/16rem);
        margin: 0 0 (32/16rem) 0;
        color: var(--bodyTextColor);
        display: flex;
        flex-direction: column;
        gap: (16/16rem);
      }

      ul {
        li {
          list-style: none;
          color: inherit;
          position: relative;

          &:before {
            /* custom list bullet */
            content: "";
            width: 3px;
            height: 3px;
            background: currentColor;
            opacity: 1;
            border-radius: 50%;
            position: absolute;
            display: block;
            top: (10/16rem);
            left: (-12/16rem);
          }
        }
      }

      .cs-image-group {
        /* scales the whole section down and ties the font size to the vw and stops at 70% of the vale of 1em, changes at desktop */
        font-size: ~"min(1vw, 1em)";
        /* everything inside this box is in ems so we can scale it all down proportionally with a font size */
        width: (542/16em);
        height: (773/16em);
        display: none;
        /* prevents flexbox from squishing it */
        flex: none;
        position: relative;
        z-index: 1;
      }

      .cs-picture {
        width: (542/16em);
        height: (647/16em);
        border-radius: (285/16em);
        border: (12/16em) solid #fff;
        background-color: #f7f7f7;
        /* prevents border from affecting height and width */
        box-sizing: border-box;
        /* clips img tag corners */
        overflow: hidden;
        display: block;
        position: absolute;
        top: 0;
        left: 0;

        img {
          width: 100%;
          height: 100%;
          /* makes it act like a background image */
          object-fit: cover;
          position: absolute;
          top: 0;
          left: 0;
        }
      }

      .cs-flower {
        width: (362/16em);
        height: auto;
        display: block;
        position: absolute;
        bottom: (-38/16em);
        right: (-48/16em);
        z-index: -1;
        transform: rotate(142deg);
      }

      .cs-sense {
        width: (80/16em);
        height: auto;
        position: absolute;
        top: (-4/16em);
        left: (10/16em);
        transform: rotate(90deg);
      }

      .cs-background {
        display: none;
      }
    }
  }

  /* Tablet - 768px */
  @media only screen and (min-width: 48rem) {
    #content-page-714 {
      .cs-container {
        flex-direction: row;
        align-items: flex-start;
      }

      .cs-image-group {
        display: block;
        /* sends it to the left in the 1st position */
        order: -1;
      }

      .cs-content {
        margin-left: auto;
      }

      .cs-background {
        width: 20%;
        height: 100%;
        background-color: #f7f7f7;
        display: block;
        position: absolute;
        left: 0;
        top: 0;
        z-index: -1;

        img {
          width: 100%;
          height: 100%;
          opacity: 0.2;
          object-fit: cover;
          position: absolute;
          top: 0;
          left: 0;
          z-index: 1;
        }
      }
    }
  }

  /* Large Desktop 1300px */
  @media only screen and (min-width: 81.25rem) {
    #content-page-714 {
      .cs-image-group {
        /* position absolute so we can have it overflow the container as seen in the design. */
        font-size: inherit;
        position: absolute;
        top: (0/16rem);
        left: (-100/16rem);
      }

      .cs-background {
        width: 50%;
        /* with the left edge always positioned at the center line, we push right of the center line by 335px.  This ensures that this element will stay exactly in this position no matter hoe wide the screen gets */
        margin-right: (335/16rem);
        left: auto;
        /* sets the right edge of the element to be at the center line */
        right: 50%;
      }
    }
  }
</style>
